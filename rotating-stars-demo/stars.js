// Generated by CoffeeScript 1.6.2
(function() {
  var Sky, Star, canvas, ctx, div, draw_sky, height, i, max_radius, max_size, requestAnimationFrame, retinafy, sky, speed, star_number, stars, width, wrapper_id;

  wrapper_id = 'wrapper';

  width = 800;

  height = 400;

  star_number = 800;

  Sky = (function() {
    function Sky(w, h, x, y) {
      this.w = w;
      this.h = h;
      this.x = x;
      this.y = y;
    }

    Sky.prototype.visible = function(x, y) {
      return x > 0 && y > 0 && x <= this.w && y <= this.h;
    };

    return Sky;

  })();

  Star = (function() {
    function Star(init_angle, radius, size, speed) {
      this.init_angle = init_angle;
      this.radius = radius;
      this.size = size;
      this.speed = speed;
    }

    Star.prototype.draw = function(ctx, sky, time_elapsed) {
      var angle, x, y;

      angle = this.init_angle + (time_elapsed * this.speed) % (2 * Math.PI);
      x = -this.radius * Math.cos(angle);
      y = this.radius * Math.sin(angle);
      if (!sky.visible(x, y)) {
        return;
      }
      ctx.beginPath();
      ctx.arc(-x, -y, this.size, 0, 2 * Math.PI, true);
      return ctx.fill();
    };

    return Star;

  })();

  retinafy = function(canvas) {
    var DPR;

    DPR = window.devicePixelRatio;
    width = +canvas.getAttribute('width');
    height = +canvas.getAttribute('height');
    canvas.style.width = width + 'px';
    canvas.style.height = height + 'px';
    canvas.width = width * DPR;
    canvas.height = height * DPR;
    return canvas.getContext('2d').scale(DPR, DPR);
  };

  requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;

  div = document.getElementById(wrapper_id);

  console.log(div);

  canvas = document.createElement('canvas');

  canvas.width = width;

  canvas.height = height;

  div.appendChild(canvas);

  console.log(canvas);

  retinafy(canvas);

  ctx = canvas.getContext('2d');

  ctx.translate(width, height);

  max_radius = Math.sqrt(width * width + height * height);

  max_size = 2;

  speed = Math.PI / 60000;

  sky = new Sky(width, height, 0, 0);

  stars = (function() {
    var _i, _results;

    _results = [];
    for (i = _i = 1; 1 <= star_number ? _i <= star_number : _i >= star_number; i = 1 <= star_number ? ++_i : --_i) {
      _results.push(new Star(Math.random() * 2 * Math.PI, Math.random() * max_radius, Math.random() * max_size, speed));
    }
    return _results;
  })();

  draw_sky = function(time_stamp) {
    var star, _i, _len;

    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, -width, -height);
    ctx.fillStyle = ctx.strokeStyle = 'white';
    for (_i = 0, _len = stars.length; _i < _len; _i++) {
      star = stars[_i];
      star.draw(ctx, sky, time_stamp);
    }
    return requestAnimationFrame(draw_sky);
  };

  requestAnimationFrame(draw_sky);

}).call(this);
