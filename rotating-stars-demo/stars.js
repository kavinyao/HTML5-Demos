// Generated by CoffeeScript 1.6.2
(function() {
  var Sky, Star, canvas, center_x, center_y, ctx, div, draw_sky, fps, height, i, last_frame, max_radius, max_size, ms_per_frame, random_star, requestAnimationFrame, retinafy, sky, speed, star_number, stars, width, wrapper_id;

  wrapper_id = 'wrapper';

  width = document.documentElement.clientWidth;

  height = document.documentElement.clientHeight;

  star_number = Math.floor(0.001 * width * height);

  fps = 30;

  Sky = (function() {
    function Sky(w, h, x, y) {
      this.w = w;
      this.h = h;
      this.x = x;
      this.y = y;
      this.x_upper = this.w - this.x;
      this.x_lower = -this.x;
      this.y_upper = this.h - this.y;
      this.y_lower = -this.y;
    }

    Sky.prototype.visible = function(x, y) {
      return x >= this.x_lower && x <= this.x_upper && y >= this.y_lower && y <= this.y_upper;
    };

    return Sky;

  })();

  Star = (function() {
    function Star(init_angle, radius, size, speed, max_brightness) {
      this.init_angle = init_angle;
      this.radius = radius;
      this.size = size;
      this.speed = speed;
      this.max_brightness = max_brightness;
      this.bright_offset = Math.random() * 2 * Math.PI;
    }

    Star.prototype.draw = function(ctx, sky, time_elapsed) {
      var angle, brightness, x, y;

      angle = this.init_angle + (time_elapsed * this.speed) % (2 * Math.PI);
      x = this.radius * Math.cos(angle);
      y = -this.radius * Math.sin(angle);
      if (!sky.visible(x, y)) {
        return;
      }
      brightness = ((1 + Math.sin(0.001 * time_elapsed + this.bright_offset)) / 2 + 0.05) * this.max_brightness;
      ctx.fillStyle = ctx.strokeStyle = "rgba(255, 255, 255, " + brightness;
      ctx.save();
      ctx.translate(x, y);
      ctx.rotate(angle);
      this.drawCross(this.size);
      brightness = brightness * 0.75;
      ctx.fillStyle = ctx.strokeStyle = "rgba(255, 255, 255, " + brightness;
      ctx.rotate(0.25 * Math.PI);
      this.drawCross(this.size * 4 / 5);
      return ctx.restore();
    };

    Star.prototype.drawCross = function(size) {
      var inner_side, outer_side;

      ctx.beginPath();
      inner_side = size;
      outer_side = 2.5 * inner_side;
      ctx.moveTo(inner_side, 0);
      ctx.lineTo(outer_side, -outer_side);
      ctx.lineTo(0, -inner_side);
      ctx.lineTo(-outer_side, -outer_side);
      ctx.lineTo(-inner_side, 0);
      ctx.lineTo(-outer_side, outer_side);
      ctx.lineTo(0, inner_side);
      ctx.lineTo(outer_side, outer_side);
      return ctx.fill();
    };

    return Star;

  })();

  retinafy = function(canvas) {
    var DPR;

    DPR = window.devicePixelRatio;
    width = +canvas.getAttribute('width');
    height = +canvas.getAttribute('height');
    canvas.style.width = width + 'px';
    canvas.style.height = height + 'px';
    canvas.width = width * DPR;
    canvas.height = height * DPR;
    return canvas.getContext('2d').scale(DPR, DPR);
  };

  requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;

  div = document.getElementById(wrapper_id);

  canvas = document.createElement('canvas');

  canvas.width = width;

  canvas.height = height;

  div.appendChild(canvas);

  retinafy(canvas);

  max_radius = Math.sqrt(width * width + height * height);

  max_size = 2;

  speed = Math.PI / 100000;

  random_star = function(speed, max_radius, max_size) {
    var init_angle, max_brightness, radius, size;

    init_angle = Math.random() * 2 * Math.PI;
    radius = Math.random() * max_radius;
    size = Math.random() * max_size;
    max_brightness = (Math.random() + 0.5) / 1.5;
    return new Star(init_angle, radius, size, speed, max_brightness);
  };

  center_x = width;

  center_y = height;

  sky = new Sky(width, height, center_x, center_y);

  stars = (function() {
    var _i, _results;

    _results = [];
    for (i = _i = 1; 1 <= star_number ? _i <= star_number : _i >= star_number; i = 1 <= star_number ? ++_i : --_i) {
      _results.push(random_star(speed, max_radius, max_size));
    }
    return _results;
  })();

  ctx = canvas.getContext('2d');

  ctx.translate(center_x, center_y);

  ms_per_frame = 1000 / fps;

  last_frame = 0;

  draw_sky = function(time_stamp) {
    var star, _i, _len;

    if (time_stamp - last_frame < ms_per_frame) {
      requestAnimationFrame(draw_sky);
      return;
    }
    last_frame = time_stamp;
    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, -width, -height);
    for (_i = 0, _len = stars.length; _i < _len; _i++) {
      star = stars[_i];
      star.draw(ctx, sky, time_stamp);
    }
    return requestAnimationFrame(draw_sky);
  };

  requestAnimationFrame(draw_sky);

}).call(this);
